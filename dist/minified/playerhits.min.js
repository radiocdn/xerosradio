class RadioPlayer{constructor(){this.radioPlayer=document.getElementById("radioPlayer"),this.radioPlayer.setAttribute("preload","none"),this.artistInfo=document.getElementById("artistInfo"),this.titleInfo=document.getElementById("titleInfo"),this.albumArtwork=document.getElementById("albumArtwork"),this.playPauseButton=document.getElementById("playPauseButton"),this.volumeSlider=document.getElementById("volumeSlider"),this.castButton=document.getElementById("castButton"),this.isPlaying=!1,this.playPauseButton.addEventListener("click",this.togglePlay.bind(this)),this.volumeSlider.addEventListener("input",this.adjustVolume.bind(this)),this.castButton.addEventListener("click",this.castButtonClick.bind(this)),this.volumeSlider.value=this.getVolumeFromCookie()||.5,this.radioPlayer.volume=this.volumeSlider.value,this.updateNowPlaying(),setInterval(this.updateNowPlaying.bind(this),5e3),window.__onGCastApiAvailable=a=>{a&&this.initializeCastApi()};const a=cast.framework.CastContext.getInstance();a.addEventListener(cast.framework.CastContextEventType.SESSION_STATE_CHANGED,a=>{switch(a.sessionState){case cast.framework.SessionState.SESSION_STARTED:this.pauseLocalAudioPlayer();break;case cast.framework.SessionState.SESSION_ENDED:case cast.framework.SessionState.SESSION_RESUMED:this.resumeLocalAudioPlayer();break;default:}})}initializeCastApi(){const a=cast.framework.CastContext.getInstance();a.setOptions({receiverApplicationId:chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,autoJoinPolicy:chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED})}castButtonClick(){if(cast&&cast.framework&&cast.framework.CastContext){const a=cast.framework.CastContext.getInstance();a.requestSession().then(()=>{console.log("Session started successfully."),this.loadMediaToCast()}).catch(a=>{console.error("Error starting session:",a)})}else console.error("Cast SDK is not available or initialized.")}loadMediaToCast(){const a=cast.framework.CastContext.getInstance().getCurrentSession();if(!a)return void console.error("No active Cast session.");const b=new chrome.cast.media.MediaInfo("https://stream2.streamxerosradio.duckdns.org/xerosradiohits","audio/mpeg"),c=new chrome.cast.media.LoadRequest(b);a.loadMedia(c).then(()=>{console.log("Media loaded successfully.")}).catch(a=>{console.error("Error loading media:",a)})}handleCastSessionState(a){switch(a.sessionState){case cast.framework.SessionState.SESSION_STARTED:this.pauseLocalAudioPlayer();break;case cast.framework.SessionState.SESSION_ENDED:case cast.framework.SessionState.SESSION_RESUMED:this.resumeLocalAudioPlayer();break;default:}}pauseLocalAudioPlayer(){this.isPlaying&&(this.radioPlayer.pause(),this.isPlaying=!1,this.updatePlayPauseButton())}resumeLocalAudioPlayer(){this.isPlaying||(this.radioPlayer.play(),this.isPlaying=!0,this.updatePlayPauseButton())}updatePlayPauseButton(){this.playPauseButton.className=this.isPlaying?"fas fa-pause":"fas fa-play"}updateNowPlaying(){fetch("https://xerosradioapi.global.ssl.fastly.net/api/xerosradiohits/").then(a=>a.json()).then(a=>{const b=a.current_song.cover_art200x200,c=a.current_song.artist,d=a.current_song.title;this.artistInfo.textContent=c,this.titleInfo.textContent=d,this.albumArtwork.src=b?b:"https://res.cloudinary.com/xerosradio/image/upload/w_200,h_200,f_webp,q_auto/XerosRadio_Logo_Achtergrond_Wit"}).catch(a=>console.error("XerosRadio API Error:",a))}togglePlay(){this.isPlaying?this.radioPlayer.pause():this.radioPlayer.play(),this.isPlaying=!this.isPlaying,this.updatePlayPauseButton()}adjustVolume(){this.radioPlayer.volume=this.volumeSlider.value,this.saveVolumeToCookie(this.volumeSlider.value)}saveVolumeToCookie(a){document.cookie=`volume=${a}`}getVolumeFromCookie(){const a=document.cookie.split(";").find(a=>a.trim().startsWith("volume="));return a?parseFloat(a.split("=")[1]):null}}const radioPlayer=new RadioPlayer;